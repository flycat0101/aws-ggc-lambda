from socket import *
import os
import sys
import time

offFrame = bytearray([0x5a,0xa5,0xaa,0x55,0x5a,0xa5,0xaa,0x55,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xd4,0xcd,0x00,0x00,0x11,0x27,0x6a,0x00,0x33,0x80,0x58,0x55,0xa7,0x0d,0x43,0xb4,0x01,0x00,0x00,0x00,0xb1,0xbe,0x00,0x00,0x4a,0x57,0xa7,0x5c,0x25,0x19,0x58,0x20,0xfc,0x88,0xfb,0x1b,0x63,0x5f,0x11,0x45])

onFrame  = bytearray([0x5a,0xa5,0xaa,0x55,0x5a,0xa5,0xaa,0x55,0x01,0x00,0x2a,0x00,0xd5,0x99,0x2c,0x06,0x01,0x00,0x2a,0x00,0x00,0x00,0x00,0x00,0x70,0x7c,0x23,0x68,0x90,0x1f,0x00,0x00,0x20,0xd4,0x00,0x00,0x11,0x27,0x6a,0x00,0xe7,0x82,0x58,0x55,0xa7,0x0d,0x43,0xb4,0x01,0x00,0x00,0x00,0xb2,0xbe,0x00,0x00,0x3e,0x40,0x8b,0x0a,0x89,0xa1,0xbd,0x7c,0x17,0xf6,0xe8,0x6a,0x84,0xb9,0x4c,0x27])

offFrame=bytearray([0x5a,0xa5,0xaa,0x55,0x5a,0xa5,0xaa,0x55,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb0,0xd0,0x00,0x00,0x11,0x27,0x6a,0x00,0xce,0x80,0x42,0x6f,0x11,0x0d,0x43,0xb4,0x02,0x00,0x00,0x00,0xb1,0xbe,0x00,0x00,0xed,0x21,0x11,0xc4,0x84,0xc7,0xfc,0xba,0xcf,0xb1,0x20,0x80,0x44,0x54,0xa0,0xa2])

onFrame=bytearray([0x5a,0xa5,0xaa,0x55,0x5a,0xa5,0xaa,0x55,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x73,0xd0,0x00,0x00,0x11,0x27,0x6a,0x00,0x86,0x80,0x42,0x6f,0x11,0x0d,0x43,0xb4,0x02,0x00,0x00,0x00,0xb2,0xbe,0x00,0x00,0xe9,0x5e,0xac,0xfc,0xce,0x80,0x3d,0x06,0xde,0xb1,0x0b,0xb2,0xb1,0x42,0x79,0xb0])

powerIp = "192.168.3.28"


class PowerSwitchController:
	def __init__(self, port=80):
		self.sock = socket(AF_INET, SOCK_DGRAM)
		self.addr = (powerIp, port)
		self.sock.settimeout(5)
		self.off = offFrame
		self.on = onFrame
		self.topic = 'control_power'

	def __del__(self):
		self.sock.close()

	def __switchOn(self):
		self.sock.sendto(self.on, self.addr)
		buf, addr = self.sock.recvfrom(1024)

	def __switchOff(self):
		self.sock.sendto(self.off, self.addr)
		buf, addr = self.sock.recvfrom(1024)

	def switch(self, action):
		try:
			if action == 'on':
				self.__switchOn()
			elif action == 'off':
				self.__switchOff()
		except Exception,e:
			print 'rcv:Switch power to',action,'failed:',e
	
	
if __name__ == '__main__':
	powerController = PowerSwitchController()
	
	if sys.argv[1] == 'on':
		for i in range(2):
			powerController.switch('on')
			time.sleep(1)
	else:
		for i in range(2):
			powerController.switch('off')
			time.sleep(1)
	